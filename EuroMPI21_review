SUBMISSION: 13
TITLE: Long Vector Gather and Scatter for Non-contiguous Data Movement in Open MPI


----------------------- REVIEW 1 ---------------------
SUBMISSION: 13
TITLE: Long Vector Gather and Scatter for Non-contiguous Data Movement in Open MPI
AUTHORS: Dong Zhong, Qinglei Cao, George Bosilca and Jack Dongarra

----------- Quality -----------
SCORE: 2 (poor)
----------- Correctness and technical strength -----------
SCORE: 2 (poor)
----------- Originality -----------
SCORE: 2 (poor)
----------- Clarity and language -----------
SCORE: 2 (poor)
----------- Relevance -----------
SCORE: 5 (excellent)
----------- Overall evaluation -----------
SCORE: -2 (reject)
----- TEXT:
The paper proposes to use vector extensions to improve packing and unpacking of structured data (derived datatypes) in MPI. There is nothing new or surprising here, this has been done often, starting from at least

Jesper Larsson Träff, Rolf Hempel, Hubert Ritzdorf, Falk Zimmermann:
Flattening on the Fly: Efficient Handling of MPI Derived Datatypes. PVM/MPI 1999: 109-116

which did the same thing for real vector systems as suggested in Figure 3. The paper does not at all discuss how recursive or nested datatypes are to be handled. Also, pipelining, which is important for large data is not discussed. The related work overlooks numerous work, e.g., also by Gropp and by Panda et al., and by others, on the handling of derived datatypes, much of which would or already does allow the use of vector gather/scatter instructions.

[19] is by Hofmann (not Michael), there may be other miscitations. And why is this work relevant here (there are extensions in

Jesper Larsson Träff: Transparent Neutral Element Elimination in MPI Reduction Operations. EuroMPI 2010: 275-284

and in work by Hoefler, but does this really belong here?)

Overall the paper is poorly written; it should be tightened and checked for grammar.



----------------------- REVIEW 2 ---------------------
SUBMISSION: 13
TITLE: Long Vector Gather and Scatter for Non-contiguous Data Movement in Open MPI
AUTHORS: Dong Zhong, Qinglei Cao, George Bosilca and Jack Dongarra

----------- Quality -----------
SCORE: 3 (fair)
----------- Correctness and technical strength -----------
SCORE: 3 (fair)
----------- Originality -----------
SCORE: 2 (poor)
----------- Clarity and language -----------
SCORE: 3 (fair)
----------- Relevance -----------
SCORE: 4 (good)
----------- Overall evaluation -----------
SCORE: -2 (reject)
----- TEXT:
This work attempts to use the Intel Vector Gather/Scatter instructions to
accelerate the pack and unpack operations. The authors implement their design in
OpenMPI and evaluate the performance of designs in basic benchmarks and
application kernels. The authors show improvement up to 10% at the application
kernel level.

While this idea is interesting, this does not seem novel enough
to fit in this conference. For instance in "Using Arm Scalable Vector Extension
to Optimize OPEN MPI", the authors have explored a similar idea for the Arm
Architecture.  Though the authors have cited the above paper, they fail to
mention how the current work is different from the work from the cited paper.

Also, in slide 32 of the OpenMPI ECP BOF presentation
(https://www-lb.open-mpi.org/papers/ecp-bof-2021/ompi-ecp-community-bofs-2021.pdf)
OpenMPI team has shown similar results. Was that derived from this work?

Detailed Comments:

1) In algorithm 1, it is not clear how the variable "threshold" is
determined.

2) Section 4 does not have experiments for larger block lengths (beyond 2
MPI_INTs).

3) It will be interesting to show the impact of this scheme in 3D stencil
which has simple and nested vector layouts of different block lengths.

4) Since the authors have used a 2X8 grid, it looks like the communication in
Y-direction with vector will be more than the X-direction communication with
contiguous datatype. As I understand, generally, the grid size has to be chosen
in a way that gives the best performance by balancing communication in both
directions to give the best performance. Could you explain the choice of grid
sizes in this light?



----------------------- REVIEW 3 ---------------------
SUBMISSION: 13
TITLE: Long Vector Gather and Scatter for Non-contiguous Data Movement in Open MPI
AUTHORS: Dong Zhong, Qinglei Cao, George Bosilca and Jack Dongarra

----------- Quality -----------
SCORE: 4 (good)
----------- Correctness and technical strength -----------
SCORE: 4 (good)
----------- Originality -----------
SCORE: 4 (good)
----------- Clarity and language -----------
SCORE: 4 (good)
----------- Relevance -----------
SCORE: 4 (good)
----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:
This paper proposes new optimized strategies by utilizing the AVX-512 gather and scatter feature to improve the packing and unpacking operations for non-contiguous data movement.This optimization provides higher parallelism for a single node and achieves a more efficient communication scheme of message exchanging. The proposed optimization is implemented in OpenMPI and allows to achieve decent speedups against state-of-the-art memory copy based implementations on tested benchmarks and applications.

The paper is technically sound, quite well written, and certainly of relevance to the MPI community that faces more and more complexity in modern advanced architectures and processors used in HPC.
